plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
modid = project.modid
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/terrains.accesswidener")
	runs {
		datagen {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${project.modid}"

			runDir "build/datagen"
		}
	}
}

repositories {
	maven {url = 'https://maven.minecraftforge.net/'}
	maven {url = 'https://maven.terraformersmc.com/'}
	maven {url = 'https://mvnrepository.com/artifact/it.unimi.dsi/fastutil/'}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
}

dependencies {
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}+${project.minecraft_version}"

	implementation"it.unimi.dsi:fastutil:8.2.1"
	//modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.2.0")
	modImplementation(include("com.github.glitchfiend:TerraBlender-fabric:${project.minecraft_version}-${project.terrablender_version}"))
	modImplementation(include("com.terraformersmc.terraform-api:terraform-tree-api-v1:${project.terraform_api_version}"))
	modImplementation(include("com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_api_version}"))
	modImplementation(include("com.terraformersmc.terraform-api:terraform-shapes-api-v1:${project.terraform_api_version}"))
}

processResources {

	Map<String, String> properties = new HashMap<>()
	properties.put("version", version)
	properties.put("fabric_loader_version", fabric_loader_version)
	properties.put("fabric_api_version", fabric_api_version)
	properties.put("minecraft_version", minecraft_version)
	properties.put("modid", modid)
	properties.put("mod_name", mod_name)

	properties.forEach((k, v) -> inputs.property(k, v))

	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
